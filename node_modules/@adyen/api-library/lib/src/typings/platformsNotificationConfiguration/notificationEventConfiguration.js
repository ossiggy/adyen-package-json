"use strict";
/*
 * The version of the OpenAPI document: v6
 * Contact: developer-experience@adyen.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit this class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.NotificationEventConfiguration = void 0;
class NotificationEventConfiguration {
    static getAttributeTypeMap() {
        return NotificationEventConfiguration.attributeTypeMap;
    }
}
exports.NotificationEventConfiguration = NotificationEventConfiguration;
NotificationEventConfiguration.discriminator = undefined;
NotificationEventConfiguration.attributeTypeMap = [
    {
        "name": "eventType",
        "baseName": "eventType",
        "type": "NotificationEventConfiguration.EventTypeEnum"
    },
    {
        "name": "includeMode",
        "baseName": "includeMode",
        "type": "NotificationEventConfiguration.IncludeModeEnum"
    }
];
(function (NotificationEventConfiguration) {
    let EventTypeEnum;
    (function (EventTypeEnum) {
        EventTypeEnum[EventTypeEnum["AccountClosed"] = 'ACCOUNT_CLOSED'] = "AccountClosed";
        EventTypeEnum[EventTypeEnum["AccountCreated"] = 'ACCOUNT_CREATED'] = "AccountCreated";
        EventTypeEnum[EventTypeEnum["AccountFundsBelowThreshold"] = 'ACCOUNT_FUNDS_BELOW_THRESHOLD'] = "AccountFundsBelowThreshold";
        EventTypeEnum[EventTypeEnum["AccountHolderCreated"] = 'ACCOUNT_HOLDER_CREATED'] = "AccountHolderCreated";
        EventTypeEnum[EventTypeEnum["AccountHolderLimitReached"] = 'ACCOUNT_HOLDER_LIMIT_REACHED'] = "AccountHolderLimitReached";
        EventTypeEnum[EventTypeEnum["AccountHolderPayout"] = 'ACCOUNT_HOLDER_PAYOUT'] = "AccountHolderPayout";
        EventTypeEnum[EventTypeEnum["AccountHolderStatusChange"] = 'ACCOUNT_HOLDER_STATUS_CHANGE'] = "AccountHolderStatusChange";
        EventTypeEnum[EventTypeEnum["AccountHolderStoreStatusChange"] = 'ACCOUNT_HOLDER_STORE_STATUS_CHANGE'] = "AccountHolderStoreStatusChange";
        EventTypeEnum[EventTypeEnum["AccountHolderUpcomingDeadline"] = 'ACCOUNT_HOLDER_UPCOMING_DEADLINE'] = "AccountHolderUpcomingDeadline";
        EventTypeEnum[EventTypeEnum["AccountHolderUpdated"] = 'ACCOUNT_HOLDER_UPDATED'] = "AccountHolderUpdated";
        EventTypeEnum[EventTypeEnum["AccountHolderVerification"] = 'ACCOUNT_HOLDER_VERIFICATION'] = "AccountHolderVerification";
        EventTypeEnum[EventTypeEnum["AccountUpdated"] = 'ACCOUNT_UPDATED'] = "AccountUpdated";
        EventTypeEnum[EventTypeEnum["BeneficiarySetup"] = 'BENEFICIARY_SETUP'] = "BeneficiarySetup";
        EventTypeEnum[EventTypeEnum["CompensateNegativeBalance"] = 'COMPENSATE_NEGATIVE_BALANCE'] = "CompensateNegativeBalance";
        EventTypeEnum[EventTypeEnum["DirectDebitInitiated"] = 'DIRECT_DEBIT_INITIATED'] = "DirectDebitInitiated";
        EventTypeEnum[EventTypeEnum["PaymentFailure"] = 'PAYMENT_FAILURE'] = "PaymentFailure";
        EventTypeEnum[EventTypeEnum["PendingCredit"] = 'PENDING_CREDIT'] = "PendingCredit";
        EventTypeEnum[EventTypeEnum["RefundFundsTransfer"] = 'REFUND_FUNDS_TRANSFER'] = "RefundFundsTransfer";
        EventTypeEnum[EventTypeEnum["ReportAvailable"] = 'REPORT_AVAILABLE'] = "ReportAvailable";
        EventTypeEnum[EventTypeEnum["ScheduledRefunds"] = 'SCHEDULED_REFUNDS'] = "ScheduledRefunds";
        EventTypeEnum[EventTypeEnum["ScoreSignalTriggered"] = 'SCORE_SIGNAL_TRIGGERED'] = "ScoreSignalTriggered";
        EventTypeEnum[EventTypeEnum["TransferFunds"] = 'TRANSFER_FUNDS'] = "TransferFunds";
        EventTypeEnum[EventTypeEnum["TransferNotPaidoutTransfers"] = 'TRANSFER_NOT_PAIDOUT_TRANSFERS'] = "TransferNotPaidoutTransfers";
    })(EventTypeEnum = NotificationEventConfiguration.EventTypeEnum || (NotificationEventConfiguration.EventTypeEnum = {}));
    let IncludeModeEnum;
    (function (IncludeModeEnum) {
        IncludeModeEnum[IncludeModeEnum["Exclude"] = 'EXCLUDE'] = "Exclude";
        IncludeModeEnum[IncludeModeEnum["Include"] = 'INCLUDE'] = "Include";
    })(IncludeModeEnum = NotificationEventConfiguration.IncludeModeEnum || (NotificationEventConfiguration.IncludeModeEnum = {}));
})(NotificationEventConfiguration = exports.NotificationEventConfiguration || (exports.NotificationEventConfiguration = {}));
//# sourceMappingURL=notificationEventConfiguration.js.map