"use strict";
/*
 * The version of the OpenAPI document: v6
 * Contact: developer-experience@adyen.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit this class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.TestNotificationConfigurationResponse = void 0;
class TestNotificationConfigurationResponse {
    static getAttributeTypeMap() {
        return TestNotificationConfigurationResponse.attributeTypeMap;
    }
}
exports.TestNotificationConfigurationResponse = TestNotificationConfigurationResponse;
TestNotificationConfigurationResponse.discriminator = undefined;
TestNotificationConfigurationResponse.attributeTypeMap = [
    {
        "name": "errorMessages",
        "baseName": "errorMessages",
        "type": "Array<string>"
    },
    {
        "name": "eventTypes",
        "baseName": "eventTypes",
        "type": "Array<TestNotificationConfigurationResponse.EventTypesEnum>"
    },
    {
        "name": "exchangeMessages",
        "baseName": "exchangeMessages",
        "type": "Array<ExchangeMessage>"
    },
    {
        "name": "invalidFields",
        "baseName": "invalidFields",
        "type": "Array<ErrorFieldType>"
    },
    {
        "name": "notificationId",
        "baseName": "notificationId",
        "type": "number"
    },
    {
        "name": "okMessages",
        "baseName": "okMessages",
        "type": "Array<string>"
    },
    {
        "name": "pspReference",
        "baseName": "pspReference",
        "type": "string"
    },
    {
        "name": "resultCode",
        "baseName": "resultCode",
        "type": "string"
    }
];
(function (TestNotificationConfigurationResponse) {
    let EventTypesEnum;
    (function (EventTypesEnum) {
        EventTypesEnum[EventTypesEnum["AccountClosed"] = 'ACCOUNT_CLOSED'] = "AccountClosed";
        EventTypesEnum[EventTypesEnum["AccountCreated"] = 'ACCOUNT_CREATED'] = "AccountCreated";
        EventTypesEnum[EventTypesEnum["AccountFundsBelowThreshold"] = 'ACCOUNT_FUNDS_BELOW_THRESHOLD'] = "AccountFundsBelowThreshold";
        EventTypesEnum[EventTypesEnum["AccountHolderCreated"] = 'ACCOUNT_HOLDER_CREATED'] = "AccountHolderCreated";
        EventTypesEnum[EventTypesEnum["AccountHolderLimitReached"] = 'ACCOUNT_HOLDER_LIMIT_REACHED'] = "AccountHolderLimitReached";
        EventTypesEnum[EventTypesEnum["AccountHolderPayout"] = 'ACCOUNT_HOLDER_PAYOUT'] = "AccountHolderPayout";
        EventTypesEnum[EventTypesEnum["AccountHolderStatusChange"] = 'ACCOUNT_HOLDER_STATUS_CHANGE'] = "AccountHolderStatusChange";
        EventTypesEnum[EventTypesEnum["AccountHolderStoreStatusChange"] = 'ACCOUNT_HOLDER_STORE_STATUS_CHANGE'] = "AccountHolderStoreStatusChange";
        EventTypesEnum[EventTypesEnum["AccountHolderUpcomingDeadline"] = 'ACCOUNT_HOLDER_UPCOMING_DEADLINE'] = "AccountHolderUpcomingDeadline";
        EventTypesEnum[EventTypesEnum["AccountHolderUpdated"] = 'ACCOUNT_HOLDER_UPDATED'] = "AccountHolderUpdated";
        EventTypesEnum[EventTypesEnum["AccountHolderVerification"] = 'ACCOUNT_HOLDER_VERIFICATION'] = "AccountHolderVerification";
        EventTypesEnum[EventTypesEnum["AccountUpdated"] = 'ACCOUNT_UPDATED'] = "AccountUpdated";
        EventTypesEnum[EventTypesEnum["BeneficiarySetup"] = 'BENEFICIARY_SETUP'] = "BeneficiarySetup";
        EventTypesEnum[EventTypesEnum["CompensateNegativeBalance"] = 'COMPENSATE_NEGATIVE_BALANCE'] = "CompensateNegativeBalance";
        EventTypesEnum[EventTypesEnum["DirectDebitInitiated"] = 'DIRECT_DEBIT_INITIATED'] = "DirectDebitInitiated";
        EventTypesEnum[EventTypesEnum["PaymentFailure"] = 'PAYMENT_FAILURE'] = "PaymentFailure";
        EventTypesEnum[EventTypesEnum["PendingCredit"] = 'PENDING_CREDIT'] = "PendingCredit";
        EventTypesEnum[EventTypesEnum["RefundFundsTransfer"] = 'REFUND_FUNDS_TRANSFER'] = "RefundFundsTransfer";
        EventTypesEnum[EventTypesEnum["ReportAvailable"] = 'REPORT_AVAILABLE'] = "ReportAvailable";
        EventTypesEnum[EventTypesEnum["ScheduledRefunds"] = 'SCHEDULED_REFUNDS'] = "ScheduledRefunds";
        EventTypesEnum[EventTypesEnum["ScoreSignalTriggered"] = 'SCORE_SIGNAL_TRIGGERED'] = "ScoreSignalTriggered";
        EventTypesEnum[EventTypesEnum["TransferFunds"] = 'TRANSFER_FUNDS'] = "TransferFunds";
        EventTypesEnum[EventTypesEnum["TransferNotPaidoutTransfers"] = 'TRANSFER_NOT_PAIDOUT_TRANSFERS'] = "TransferNotPaidoutTransfers";
    })(EventTypesEnum = TestNotificationConfigurationResponse.EventTypesEnum || (TestNotificationConfigurationResponse.EventTypesEnum = {}));
})(TestNotificationConfigurationResponse = exports.TestNotificationConfigurationResponse || (exports.TestNotificationConfigurationResponse = {}));
//# sourceMappingURL=testNotificationConfigurationResponse.js.map