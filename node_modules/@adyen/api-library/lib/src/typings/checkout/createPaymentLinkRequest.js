"use strict";
/*
 * The version of the OpenAPI document: v69
 * Contact: developer-experience@adyen.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit this class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.CreatePaymentLinkRequest = void 0;
class CreatePaymentLinkRequest {
    static getAttributeTypeMap() {
        return CreatePaymentLinkRequest.attributeTypeMap;
    }
}
exports.CreatePaymentLinkRequest = CreatePaymentLinkRequest;
CreatePaymentLinkRequest.discriminator = undefined;
CreatePaymentLinkRequest.attributeTypeMap = [
    {
        "name": "allowedPaymentMethods",
        "baseName": "allowedPaymentMethods",
        "type": "Array<string>"
    },
    {
        "name": "amount",
        "baseName": "amount",
        "type": "Amount"
    },
    {
        "name": "applicationInfo",
        "baseName": "applicationInfo",
        "type": "ApplicationInfo"
    },
    {
        "name": "billingAddress",
        "baseName": "billingAddress",
        "type": "Address"
    },
    {
        "name": "blockedPaymentMethods",
        "baseName": "blockedPaymentMethods",
        "type": "Array<string>"
    },
    {
        "name": "captureDelayHours",
        "baseName": "captureDelayHours",
        "type": "number"
    },
    {
        "name": "countryCode",
        "baseName": "countryCode",
        "type": "string"
    },
    {
        "name": "dateOfBirth",
        "baseName": "dateOfBirth",
        "type": "Date"
    },
    {
        "name": "deliverAt",
        "baseName": "deliverAt",
        "type": "Date"
    },
    {
        "name": "deliveryAddress",
        "baseName": "deliveryAddress",
        "type": "Address"
    },
    {
        "name": "description",
        "baseName": "description",
        "type": "string"
    },
    {
        "name": "expiresAt",
        "baseName": "expiresAt",
        "type": "string"
    },
    {
        "name": "installmentOptions",
        "baseName": "installmentOptions",
        "type": "{ [key: string]: InstallmentOption; }"
    },
    {
        "name": "lineItems",
        "baseName": "lineItems",
        "type": "Array<LineItem>"
    },
    {
        "name": "mcc",
        "baseName": "mcc",
        "type": "string"
    },
    {
        "name": "merchantAccount",
        "baseName": "merchantAccount",
        "type": "string"
    },
    {
        "name": "merchantOrderReference",
        "baseName": "merchantOrderReference",
        "type": "string"
    },
    {
        "name": "metadata",
        "baseName": "metadata",
        "type": "{ [key: string]: string; }"
    },
    {
        "name": "recurringProcessingModel",
        "baseName": "recurringProcessingModel",
        "type": "CreatePaymentLinkRequest.RecurringProcessingModelEnum"
    },
    {
        "name": "reference",
        "baseName": "reference",
        "type": "string"
    },
    {
        "name": "requiredShopperFields",
        "baseName": "requiredShopperFields",
        "type": "Array<CreatePaymentLinkRequest.RequiredShopperFieldsEnum>"
    },
    {
        "name": "returnUrl",
        "baseName": "returnUrl",
        "type": "string"
    },
    {
        "name": "reusable",
        "baseName": "reusable",
        "type": "boolean"
    },
    {
        "name": "riskData",
        "baseName": "riskData",
        "type": "RiskData"
    },
    {
        "name": "shopperEmail",
        "baseName": "shopperEmail",
        "type": "string"
    },
    {
        "name": "shopperLocale",
        "baseName": "shopperLocale",
        "type": "string"
    },
    {
        "name": "shopperName",
        "baseName": "shopperName",
        "type": "Name"
    },
    {
        "name": "shopperReference",
        "baseName": "shopperReference",
        "type": "string"
    },
    {
        "name": "shopperStatement",
        "baseName": "shopperStatement",
        "type": "string"
    },
    {
        "name": "socialSecurityNumber",
        "baseName": "socialSecurityNumber",
        "type": "string"
    },
    {
        "name": "splitCardFundingSources",
        "baseName": "splitCardFundingSources",
        "type": "boolean"
    },
    {
        "name": "splits",
        "baseName": "splits",
        "type": "Array<Split>"
    },
    {
        "name": "store",
        "baseName": "store",
        "type": "string"
    },
    {
        "name": "storePaymentMethodMode",
        "baseName": "storePaymentMethodMode",
        "type": "CreatePaymentLinkRequest.StorePaymentMethodModeEnum"
    },
    {
        "name": "telephoneNumber",
        "baseName": "telephoneNumber",
        "type": "string"
    },
    {
        "name": "themeId",
        "baseName": "themeId",
        "type": "string"
    }
];
(function (CreatePaymentLinkRequest) {
    let RecurringProcessingModelEnum;
    (function (RecurringProcessingModelEnum) {
        RecurringProcessingModelEnum[RecurringProcessingModelEnum["CardOnFile"] = 'CardOnFile'] = "CardOnFile";
        RecurringProcessingModelEnum[RecurringProcessingModelEnum["Subscription"] = 'Subscription'] = "Subscription";
        RecurringProcessingModelEnum[RecurringProcessingModelEnum["UnscheduledCardOnFile"] = 'UnscheduledCardOnFile'] = "UnscheduledCardOnFile";
    })(RecurringProcessingModelEnum = CreatePaymentLinkRequest.RecurringProcessingModelEnum || (CreatePaymentLinkRequest.RecurringProcessingModelEnum = {}));
    let RequiredShopperFieldsEnum;
    (function (RequiredShopperFieldsEnum) {
        RequiredShopperFieldsEnum[RequiredShopperFieldsEnum["BillingAddress"] = 'billingAddress'] = "BillingAddress";
        RequiredShopperFieldsEnum[RequiredShopperFieldsEnum["DeliveryAddress"] = 'deliveryAddress'] = "DeliveryAddress";
        RequiredShopperFieldsEnum[RequiredShopperFieldsEnum["ShopperEmail"] = 'shopperEmail'] = "ShopperEmail";
        RequiredShopperFieldsEnum[RequiredShopperFieldsEnum["ShopperName"] = 'shopperName'] = "ShopperName";
        RequiredShopperFieldsEnum[RequiredShopperFieldsEnum["TelephoneNumber"] = 'telephoneNumber'] = "TelephoneNumber";
    })(RequiredShopperFieldsEnum = CreatePaymentLinkRequest.RequiredShopperFieldsEnum || (CreatePaymentLinkRequest.RequiredShopperFieldsEnum = {}));
    let StorePaymentMethodModeEnum;
    (function (StorePaymentMethodModeEnum) {
        StorePaymentMethodModeEnum[StorePaymentMethodModeEnum["AskForConsent"] = 'askForConsent'] = "AskForConsent";
        StorePaymentMethodModeEnum[StorePaymentMethodModeEnum["Disabled"] = 'disabled'] = "Disabled";
        StorePaymentMethodModeEnum[StorePaymentMethodModeEnum["Enabled"] = 'enabled'] = "Enabled";
    })(StorePaymentMethodModeEnum = CreatePaymentLinkRequest.StorePaymentMethodModeEnum || (CreatePaymentLinkRequest.StorePaymentMethodModeEnum = {}));
})(CreatePaymentLinkRequest = exports.CreatePaymentLinkRequest || (exports.CreatePaymentLinkRequest = {}));
//# sourceMappingURL=createPaymentLinkRequest.js.map